<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<context:annotation-config/>
	<!-- 配置sessionFactory -->
	
	<!--配数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/pro?useUnicode=true&amp;characterEncoding=gbk" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="default_schema">ssh</prop>

			</props>
		</property>
    <!-- 如果使用配置文件 -->
	<property name="mappingLocations"> <list> 
	    <value>classpath:bean/User.hbm.xml</value> 
	    <value>classpath:bean/Goods.hbm.xml</value> 
	    <value>classpath:bean/Orders.hbm.xml</value> 
	    <value>classpath:bean/Type.hbm.xml</value> 
	    <value>classpath:bean/Save.hbm.xml</value> 
		</list> 
	</property> 

	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 事务的传播特性 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="Add*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			
			
			 <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 那些类那些方法使用事务 -->
	<aop:config proxy-target-class="true">
	  <!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="allManagerMethod"
			expression="execution(* service.*.*(..))" />
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txadvice" />
	</aop:config>
	
	<bean id="loginAction" class="action.LoginAction" scope="prototype">
	    <property name="manage" ref="userManage"></property> 
	</bean>
	<bean id="goodsAction" class="action.GoodsAction" scope="prototype">
	    <property name="manage" ref="goodsManage"></property> 
	</bean>
	<bean id="adminAction" class="action.AdminAction" scope="prototype">
	   <!--   <property name="manage" ref="goodsManage"></property> -->
	</bean>
	<bean id="userAction" class="action.UserAction" scope="prototype">
	    <property name="manage" ref="userManage"></property> 
	</bean>
	<bean id="typeAction" class="action.TypeAction" scope="prototype">
	    <property name="manage" ref="typeManage"></property> 
	</bean>
	<bean id="ordersAction" class="action.OrderAction" scope="prototype">
	    <property name="manage" ref="ordersManage"></property> 
	</bean>
	
	<bean name="userManage" class="service.UserManageImp">
		 <property name="userDao" ref="userDao"></property> 
	</bean>
	
	<bean name="userDao" class="dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="goodsManage" class="service.GoodsManage">
		 <property name="goodsDao" ref="goodsDao"></property> 
		  <property name="typeManage" ref="typeManage"></property> 
	</bean>
	
	<bean name="goodsDao" class="dao.GoodsDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="ordersManage" class="service.OrdersManage">
		 <property name="ordersDao" ref="ordersDao"></property> 
		 <property name="goodsManage" ref="goodsManage"></property> 
		 <property name="userManage" ref="userManage"></property> 
		 <property name="saveManage" ref="saveManage"></property> 
	</bean>
	
	<bean name="ordersDao" class="dao.OrdersDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="saveManage" class="service.SaveManage">
		 <property name="saveDao" ref="saveDao"></property> 
	</bean>
	
	<bean name="saveDao" class="dao.SaveDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean name="typeManage" class="service.TypeManage">
		 <property name="typeDao" ref="typeDao"></property> 
	</bean>
	
	<bean name="typeDao" class="dao.TypeDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>
